{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/humbertosainz/Projects/react/react-nextjs-gettingstarted/pages/blog/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nimport { Layout } from \"../../components/Layout\";\n\nfunction BlogPost(_ref) {\n  var shows = _ref.shows;\n  var router = useRouter();\n  console.log(router);\n  var id = router.query.id;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, id), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, show.name)));\n  })));\n}\n\nBlogPost.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/search/shows?q=batman\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default BlogPost;","map":{"version":3,"sources":["/Users/humbertosainz/Projects/react/react-nextjs-gettingstarted/pages/blog/[id].js"],"names":["useRouter","Link","fetch","Layout","BlogPost","shows","router","console","log","id","query","map","show","name","getInitialProps","res","json","data","entry"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,MAAT,QAAuB,yBAAvB;;AAEA,SAASC,QAAT,OAA6B;AAAA,MAATC,KAAS,QAATA,KAAS;AAC3B,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAF2B,MAKhBG,EALgB,GAMvBH,MANuB,CAKzBI,KALyB,CAKhBD,EALgB;AAO3B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,EAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACM,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACH,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQG,IAAI,CAACH,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIG,IAAI,CAACC,IAAT,CADF,CADF,CADa;AAAA,GAAd,CADH,CAFF,CADF;AAcD;;AAEDT,QAAQ,CAACU,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACPZ,KAAK,CAAC,8CAAD,CADE;;AAAA;AACnBa,UAAAA,GADmB;AAAA;AAAA,2CAENA,GAAG,CAACC,IAAJ,EAFM;;AAAA;AAEnBC,UAAAA,IAFmB;AAAA,2CAIlB;AACLZ,YAAAA,KAAK,EAAEY,IAAI,CAACN,GAAL,CAAS,UAAAO,KAAK;AAAA,qBAAIA,KAAK,CAACN,IAAV;AAAA,aAAd;AADF,WAJkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AASA,eAAeR,QAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nimport { Layout } from \"../../components/Layout\";\n\nfunction BlogPost({ shows }) {\n  const router = useRouter();\n  console.log(router);\n\n  const {\n    query: { id }\n  } = router;\n  return (\n    <Layout>\n      <h1>{id}</h1>\n      <ul>\n        {shows.map(show => (\n          <li key={show.id}>\n            <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n              <a>{show.name}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n}\n\nBlogPost.getInitialProps = async function() {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n  const data = await res.json();\n\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default BlogPost;\n"]},"metadata":{},"sourceType":"module"}